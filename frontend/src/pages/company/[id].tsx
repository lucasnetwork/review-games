import type { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import Carrousel from 'nuka-carousel';

import {
  Main,
  ImageContainer,
  ContainerDescription,
  DescriptionContainer,
  Item,
} from './styles';

import { findCompany } from '../../services/api/company';
import { ContainerMain } from '../../theme/globalstyles';

interface companyProps {
  id: number;
  name: string;
  description: string;
  file_url: string;
  alt: string;
  games: Array<{
    id: number;
    name: string;
    description: string;
    file_url: string;
  }>;
}

const Company: NextPage<{
  company: companyProps;
}> = ({ company }) => (
  <Main>
    <Head>
      <title>Create Next App</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <ContainerMain>
      <ImageContainer>
        <img alt="32" src={company.file_url} />
      </ImageContainer>
      <ContainerDescription>
        <div>
          <h2>Nome</h2>
          <p>{company.name}</p>
        </div>
      </ContainerDescription>
      <DescriptionContainer>
        <h2>Descrição</h2>
        <p>{company.description}</p>
      </DescriptionContainer>
      <DescriptionContainer>
        <h2>Jogos</h2>
        <Carrousel
          slidesToShow={5}
          cellSpacing={20}
          defaultControlsConfig={{
            nextButtonStyle: {
              display: 'none',
            },
            prevButtonStyle: {
              display: 'none',
            },
            pagingDotsStyle: {
              display: 'none',
            },
          }}
        >
          {company.games.map((game) => (
            <Link key={game.id} href={`/games/${game.id}`}>
              <Item>
                <img alt="32" src={game.file_url} />
              </Item>
            </Link>
          ))}
        </Carrousel>
      </DescriptionContainer>
    </ContainerMain>
  </Main>
);

export const getServerSideProps: GetServerSideProps = async ({ params }) => {
  try {
    const company = await findCompany(params.id);
    company.data.file_url = `${process.env.REACT_APP_URL}/${company.data.file_url}`;
    const newGames = company.data.games.map((game) => ({
      ...game,
      file_url: `${process.env.REACT_APP_URL}/${game.file_url}`,
    }));
    company.data.games = newGames;
    return {
      props: {
        company: company.data,
      },
    };
  } catch {
    return {
      props: {},
    };
  }
};

export default Company;
