import type { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import { useContext } from 'react';
import Rating from 'react-star-ratings';
import { ThemeContext } from 'styled-components';

import {
  Main,
  ImageContainer,
  ContainerDescription,
  DescriptionContainer,
  CommentContainer,
} from './styles';

import { findGame } from '../../services/api/game';
import { createReview } from '../../services/api/review';
import { ContainerMain } from '../../theme/globalstyles';

interface gamesProps {
  id: number;
  name: string;
  description: string;
  file_url: string;
  company: {
    id: number;
    name: string;
    description: string;
    file_url: string;
  };
  reviewMed: number;
}

const Game: NextPage<{
  gameProps: gamesProps;
}> = ({ gameProps }) => {
  const theme = useContext(ThemeContext);

  return (
    <Main>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ContainerMain>
        <ImageContainer>
          <img alt="32" src={gameProps.file_url} />
        </ImageContainer>
        <ContainerDescription>
          <div>
            <h2>Nome</h2>
            <p>{gameProps.name}</p>
          </div>
          <div>
            <h2>Empresa</h2>
            <p>{gameProps.company.name}</p>
          </div>
          <div>
            <h2>Avaliação</h2>
            <Rating
              rating={gameProps.reviewMed || 0}
              starRatedColor={theme.background.secondary}
              changeRating={async (value: number) => {
                try {
                  const response = await createReview(value, gameProps.id);
                  console.log(response);
                } catch (e) {
                  console.log(e);
                }
              }}
              numberOfStars={5}
              name="rating"
            />
          </div>
        </ContainerDescription>
        <DescriptionContainer>
          <h2>Descrição</h2>
          <p>{gameProps.description}</p>
        </DescriptionContainer>
      </ContainerMain>
    </Main>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ params }) => {
  try {
    const game = await findGame(params.id);
    game.data.file_url = `${process.env.NEXT_PUBLIC_ANALYTICS_ID}/${game.data.file_url}`;
    game.data.company.file_url = `${process.env.NEXT_PUBLIC_ANALYTICS_ID}/${game.data.company.file_url}`;
    console.log(game);

    return {
      props: {
        gameProps: game.data,
      },
    };
  } catch (e) {
    console.log(e);
    return {
      props: {},
    };
  }
};

export default Game;
