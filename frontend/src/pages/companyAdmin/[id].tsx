import type { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import { useRouter } from 'next/router';
import Carrousel from 'nuka-carousel';
import { useState } from 'react';
import { BiTrash } from 'react-icons/bi';

import {
  Main,
  ImageContainer,
  ContainerDescription,
  DescriptionContainer,
  Item,
} from './styles';

import Button from '../../components/Form/Button';
import Header from '../../components/Header';
import { findCompany } from '../../services/api/company';
import { removeGame } from '../../services/api/game';
import { ContainerMain } from '../../theme/globalstyles';

interface companyProps {
  id: number;
  name: string;
  description: string;
  file_url: string;
  alt: string;
  games: Array<{
    id: number;
    name: string;
    description: string;
    file_url: string;
  }>;
}

const CompanyAdmin: NextPage<{
  company: companyProps;
}> = ({ company }) => {
  const [mouseUp, setMouseUp] = useState(false);
  const router = useRouter();

  async function removeGameFile(id) {
    try {
      const response = await removeGame(id);
      console.log(response);
    } catch (e) {
      console.log(e);
    }
  }

  return (
    <Main>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ContainerMain>
        <ImageContainer>
          <img alt="32" src={company?.file_url} />
        </ImageContainer>
        <ContainerDescription>
          <div>
            <h2>Nome</h2>
            <p>{company?.name}</p>
          </div>
          <Button
            className="editButton"
            onClick={() => router.push(`/createCompany/${company.id}`)}
          >
            Editar
          </Button>
          <Button
            className="addGame"
            onClick={() => router.push('/createGame')}
          >
            Adicionar Jogo
          </Button>
        </ContainerDescription>
        <DescriptionContainer>
          <h2>Descrição</h2>
          <p>{company?.description}</p>
        </DescriptionContainer>
        <DescriptionContainer>
          <h2>Jogos</h2>
          {company?.games && (
            <Carrousel
              slidesToShow={5}
              cellSpacing={20}
              defaultControlsConfig={{
                nextButtonStyle: {
                  display: 'none',
                },
                prevButtonStyle: {
                  display: 'none',
                },
                pagingDotsStyle: {
                  display: 'none',
                },
              }}
            >
              {company.games.map((game) => (
                <Item
                  key={game.id}
                  mouseUp={mouseUp}
                  onMouseEnter={() => setMouseUp(true)}
                  onMouseLeave={() => setMouseUp(false)}
                >
                  <button type="button" onClick={() => removeGameFile(game.id)}>
                    <BiTrash size={24} color="#fff" />
                  </button>
                  <Link href={`/games/${game.id}`}>
                    <img alt="32" src={game.file_url} />
                  </Link>
                </Item>
              ))}
            </Carrousel>
          )}
        </DescriptionContainer>
      </ContainerMain>
    </Main>
  );
};

CompanyAdmin.getLayout = function getLayout(page) {
  return (
    <>
      <Header />
      {page}
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ params }) => {
  try {
    const company = await findCompany(params.id);
    company.data.file_url = `${process.env.NEXT_PUBLIC_ANALYTICS_ID}/${company.data.file_url}`;
    const newGames = company.data.games.map((game) => ({
      ...game,
      file_url: `${process.env.NEXT_PUBLIC_ANALYTICS_ID}/${game.file_url}`,
    }));
    company.data.games = newGames;
    return {
      props: {
        company: company.data,
      },
    };
  } catch {
    return {
      props: {},
    };
  }
};

export default CompanyAdmin;
