import { useFormik } from 'formik';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useCallback, useState,useEffect } from 'react';
import { useDropzone } from 'react-dropzone';

import {
  Main,
  ImageContainer,
  ContainerDescription,
  DescriptionContainer,
  CommentContainer,
} from './styles';

import Input from '../../components/Form/Input';
import Textarea from '../../components/Form/TextArea';
import { ContainerMain } from '../../theme/globalstyles';
import Button from '../../components/Form/Button';
import { useRouter } from 'next/router';
import { createCompany } from '../../services/api/company';

const initialValues = {
  image: {
    url: '',
    file: null,
  },
  description: '',
  name: '',
  edit:false
};

interface createOrEditCompanyProps{
    company?:{
        imageUrl:'',
        description: '',
        name: '',
    }
}

const CreateOrEditCompany: NextPage<createOrEditCompanyProps> = (props) => {
  const [loading,setLoading] = useState(false)
  const formik = useFormik({
    initialValues,
    async onSubmit(values){
      if(loading){
        return
      }
      setLoading(true)
      try{
        const formData = new FormData()
        formData.append("file",values.image.file)
        formData.append("description",values.description)
        formData.append("name",values.name)
         await createCompany(formData)
        setLoading(false)
      }
      catch{
        setLoading(false)

      }
    }
  });
  const router = useRouter()
  console.log(props)

  const onDrop = useCallback((acceptedFiles) => {
    const file = acceptedFiles[0];
    const imageUrl = URL.createObjectURL(file);
    formik.setFieldValue("image",{
      url: imageUrl,
      file,
    })
  }, []);
  const { getRootProps, getInputProps } = useDropzone({ onDrop });

  useEffect(()=>{
    if(props?.company){
        formik.setValues({
            description:props.company.description,
            edit:true,
            image:{
                url:props.company.imageUrl,
                file:null
            },
            name:props.company.name
        })
    }
  },[])

  return (
    <Main onSubmit={formik.handleSubmit}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ContainerMain>
        <ImageContainer {...getRootProps()} existImage={Boolean(formik.values.image.url)}>
          <input {...getInputProps()} />
          {!formik.values.image.url ? (
            <div>Adicione uma imagem</div>
          ) : (
            <img alt="32" src={formik.values.image.url} />
          )}
        </ImageContainer>
        <ContainerDescription>
          <div>
            <Input labelValue="Nome" input={{
              value:formik.values.name,
              onChange:formik.handleChange,
              name:"name"
            }}/>
          </div>
          <Textarea
            container={{ className: 'height' }}
            labelValue="Descrição"
            maxValue="100"
            input={{
              value:formik.values.description,
              onChange:formik.handleChange,
              name:"description"
            }}
          />
          <Button type="submit" onClick={()=>formik.handleSubmit()}>{props.company ? "Editar":"Cadastrar"}</Button>
        </ContainerDescription>
      </ContainerMain>
    </Main>
  );
};

export default CreateOrEditCompany;
