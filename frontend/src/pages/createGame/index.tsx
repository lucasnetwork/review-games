import { useFormik } from 'formik';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useCallback, useState } from 'react';
import { useDropzone } from 'react-dropzone';

import {
  Main,
  ImageContainer,
  ContainerDescription,
  DescriptionContainer,
  CommentContainer,
} from './styles';

import Input from '../../components/Form/Input';
import Textarea from '../../components/Form/TextArea';
import { ContainerMain } from '../../theme/globalstyles';
import Button from '../../components/Form/Button';
import { createGame } from '../../services/api/game';
import Header from '../../components/Header';

const initialValues = {
  image: {
    url: '',
    file: null,
  },
  description: '',
  name: '',
};

const CreateGame: NextPage = () => {
  const [loading,setLoading] = useState(false)

  const formik = useFormik({
    initialValues,
     async onSubmit(values,{resetForm}){
       if(loading){
         return
       }
       setLoading(true)
       try{
         console.log(values)
         const formData = new FormData()
         formData.append('name',values.name)
         formData.append('description',values.description)
         formData.append('file',values.image.file)
         await createGame(formData)
         resetForm()
         setLoading(false)
       }catch{
         setLoading(false)
         return
       }
      
    }
  });

  const onDrop = useCallback((acceptedFiles) => {
    const file = acceptedFiles[0];
    const imageUrl = URL.createObjectURL(file);
    formik.setFieldValue("image",{
      url: imageUrl,
      file,
    })
  }, []);
  const { getRootProps, getInputProps } = useDropzone({ onDrop });

  return (
    <Main onSubmit={formik.handleSubmit}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ContainerMain>
        <ImageContainer {...getRootProps()} existImage={Boolean(formik.values.image.url)}>
          <input {...getInputProps()} />
          {!formik.values.image.url ? (
            <div>Adicione uma imagem</div>
          ) : (
            <img alt="32" src={formik.values.image.url} />
          )}
        </ImageContainer>
        <ContainerDescription>
          <div>
            <Input labelValue="Nome" input={{
              value:formik.values.name,
              onChange:formik.handleChange,
              name:"name"
            }}/>
          </div>
          <Textarea
            container={{ className: 'height' }}
            labelValue="Descrição"
            maxValue="100"
            input={{
              value:formik.values.description,
              onChange:formik.handleChange,
              name:"description"
            }}
          />
          <Button type="submit" >Cadastrar</Button>
        </ContainerDescription>
      </ContainerMain>
    </Main>
  );
};

CreateGame.getLayout = function getLayout(page) {
  return (
    <>
      <Header />
      {page}
    </>
  );
};

export default CreateGame;
